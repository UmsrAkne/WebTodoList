<Window
    x:Class="WebTodoApp.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:m="clr-namespace:WebTodoApp.Models"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:vms="clr-namespace:WebTodoApp.ViewModels"
    Title="{Binding Title}"
    Width="800"
    Height="700"
    d:DataContext="{d:DesignInstance vms:MainWindowViewModel,
                                     IsDesignTimeCreatable=True}"
    prism:ViewModelLocator.AutoWireViewModel="True"
    mc:Ignorable="d">

    <Window.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../res/Dictionary1.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="TextBox">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
            </Style>

            <ControlTemplate x:Key="radiusButtonTemplate" TargetType="ToggleButton">
                <Border
                    x:Name="border"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="4">
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />

                </Border>

                <ControlTemplate.Triggers>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter TargetName="border" Property="Background" Value="LightSkyBlue" />
                    </Trigger>

                    <Trigger Property="IsChecked" Value="True">
                        <Setter TargetName="border" Property="Background" Value="LightSkyBlue" />
                    </Trigger>

                    <Trigger Property="IsChecked" Value="False">
                        <Setter TargetName="border" Property="Background" Value="Transparent" />
                    </Trigger>

                </ControlTemplate.Triggers>


            </ControlTemplate>
        </ResourceDictionary>
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding
            Key="Return"
            Command="{Binding InsertTodoCommand}"
            Modifiers="Ctrl" />
        <KeyBinding
            Key="R"
            Command="{Binding DatabaseHelper.LoadCommand}"
            Modifiers="Ctrl" />

        <KeyBinding
            Key="F"
            Command="{Binding FocusCommand}"
            CommandParameter="{Binding ElementName=searchTextBox}"
            Modifiers="Ctrl" />

        <KeyBinding
            Key="T"
            Command="{Binding FocusCommand}"
            CommandParameter="{Binding ElementName=PriorityInputTextBox}"
            Modifiers="Ctrl" />
    </Window.InputBindings>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="3*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="120" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <ContentControl prism:RegionManager.RegionName="ContentRegion" />

        <Menu Grid.Row="0">
            <MenuItem Header="ファイル">
                <MenuItem Command="{Binding DatabaseHelper.ExportAllCommand}" Header="全てのTodoを出力" />

                <MenuItem Command="{Binding ExitCommand}" Header="終了" />

            </MenuItem>

            <MenuItem Header="接続">
                <MenuItem Command="{Binding DatabaseHelper.TryFirstConnectCommand}" Header="再接続" />

                <MenuItem Command="{Binding ChangeDatabaseServerCommand}" Header="RDSに接続">
                    <MenuItem.CommandParameter>
                        <m:RDSConnectionStrings />
                    </MenuItem.CommandParameter>
                </MenuItem>

                <MenuItem Command="{Binding ChangeDatabaseServerCommand}" Header="EC2に接続">
                    <MenuItem.CommandParameter>
                        <m:EC2ConnectionStrings />
                    </MenuItem.CommandParameter>
                </MenuItem>

            </MenuItem>
        </Menu>

        <ToolBar Grid.Row="1">
            <ToolBar.Resources>
                <Style x:Key="opacityTextBlockStyle" TargetType="TextBlock">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton}, Path=IsChecked}" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ToolBar.Resources>

            <ToggleButton
                Margin="4,0"
                BorderBrush="Azure"
                Command="{Binding DatabaseHelper.LoadCommand}"
                IsChecked="{Binding DatabaseHelper.SqlCommandOption.ShowOnlyIncompleteTodo}">

                <TextBlock Style="{StaticResource opacityTextBlockStyle}" Text="未完了のみ表示" />

            </ToggleButton>

            <ToggleButton
                Margin="4,0"
                BorderBrush="LightBlue"
                BorderThickness="1,0,1,0"
                Command="{Binding ToggleTextContentVisibilityCommand}"
                IsChecked="True">

                <TextBlock Style="{StaticResource opacityTextBlockStyle}" Text="一行表示" />

            </ToggleButton>

            <TextBlock Margin="6,3" Text="日時指定 : " />

            <TextBox
                MinWidth="30"
                Text="{Binding DatabaseHelper.SqlCommandOption.DisplayDateRangeString, UpdateSourceTrigger=PropertyChanged}"
                TextAlignment="Center">
                <i:Interaction.Behaviors>
                    <m:TextInputLimitBehavior />
                </i:Interaction.Behaviors>

            </TextBox>


            <TextBlock Margin="6,3" Text="日前まで表示" />

            <Border
                Width="1"
                Margin="3,0"
                Background="Black" />

            <TextBlock Margin="6,3" Text="テキスト検索 : " />

            <TextBox
                x:Name="searchTextBox"
                Width="200"
                Text="{Binding DatabaseHelper.SqlCommandOption.SearchString, UpdateSourceTrigger=PropertyChanged}">
                <TextBox.InputBindings>
                    <KeyBinding Key="Enter" Command="{Binding DatabaseHelper.LoadCommand}" />
                </TextBox.InputBindings>
            </TextBox>



        </ToolBar>

        <ListView
            x:Name="todoListView"
            Grid.Row="2"
            ItemsSource="{Binding DatabaseHelper.TodoList}">

            <ListView.Resources>
                <ContextMenu x:Key="listViewContextMenu">

                    <MenuItem Header="初期化">
                        <MenuItem
                            Command="{Binding DataContext.DatabaseHelper.ResetTodoWorkingStatusCommand, RelativeSource={RelativeSource AncestorType=ListView}}"
                            CommandParameter="{Binding Self}"
                            Header="作業状態を初期化" />

                        <MenuItem
                            Command="{Binding DataContext.DatabaseHelper.ClearTextContentCommand, RelativeSource={RelativeSource AncestorType=ListView}}"
                            CommandParameter="{Binding Self}"
                            Header="詳細テキストを消去" />
                    </MenuItem>

                    <MenuItem
                        Command="{Binding Path=DataContext.DatabaseHelper.CopyTodoCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                        CommandParameter="{Binding Self}"
                        Header="この Todo から新しい Todo を生成する" />

                    <MenuItem
                        Command="{Binding Path=DataContext.DatabaseHelper.CopyTodoWithoutTextCommand, RelativeSource={RelativeSource AncestorType=ListView}}"
                        CommandParameter="{Binding Self}"
                        Header="この Todo の詳細を初期化して複製する" />

                    <MenuItem
                        Command="{Binding Path=DataContext.DatabaseHelper.CopyAndContinueCommand, RelativeSource={RelativeSource AncestorType=ListView}}"
                        CommandParameter="{Binding Self}"
                        Header="この Todo を複製して継続作業する" />

                </ContextMenu>

            </ListView.Resources>

            <ListView.InputBindings>
                <KeyBinding
                    Key="Return"
                    Command="{Binding SelectedItem.CompleteCommand, ElementName=todoListView}"
                    Modifiers="Ctrl" />

                <KeyBinding
                    Key="C"
                    Command="{Binding DatabaseHelper.CopyTodoCommand}"
                    CommandParameter="{Binding SelectedItem, ElementName=todoListView}"
                    Modifiers="Ctrl" />

                <KeyBinding
                    Command="{Binding DatabaseHelper.CopyTodoWithoutTextCommand}"
                    CommandParameter="{Binding SelectedItem, ElementName=todoListView}"
                    Gesture="Ctrl+Shift+C" />

            </ListView.InputBindings>

            <ListView.ItemContainerStyle>
                <Style BasedOn="{StaticResource ListViewItemContainerStyle}" TargetType="ListViewItem">
                    <Setter Property="ContextMenu" Value="{StaticResource listViewContextMenu}" />

                    <Style.Triggers>

                        <DataTrigger Binding="{Binding Completed}" Value="True">
                            <Setter Property="Background" Value="White" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Completed}" Value="False">
                            <Setter Property="Background" Value="AliceBlue" />
                        </DataTrigger>

                    </Style.Triggers>


                </Style>
            </ListView.ItemContainerStyle>

            <ListView.ItemTemplate>
                <DataTemplate>
                    <DockPanel>
                        <DockPanel.InputBindings>
                            <KeyBinding
                                Key="Return"
                                Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.DatabaseHelper.UpdateCommand}"
                                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}}"
                                Modifiers="Ctrl" />
                        </DockPanel.InputBindings>

                        <TextBlock
                            Width="20"
                            VerticalAlignment="Center"
                            DockPanel.Dock="Left"
                            Text="{Binding Priority}"
                            TextAlignment="Center" />

                        <Border
                            Height="2"
                            Background="AliceBlue"
                            DockPanel.Dock="Top" />

                        <Grid Margin="0,2" DockPanel.Dock="Top">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="4*" />
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition MinWidth="170" />
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>


                            <CheckBox
                                Grid.Column="0"
                                Margin="0,1,0,0"
                                IsChecked="{Binding Completed}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Checked">
                                        <i:InvokeCommandAction Command="{Binding CompleteCommand}" />
                                        <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.DatabaseHelper.UpdateCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}}" />
                                    </i:EventTrigger>

                                    <i:EventTrigger EventName="Unchecked">
                                        <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.DatabaseHelper.UpdateCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>

                                <CheckBox.Style>
                                    <Style TargetType="CheckBox">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Completed}" Value="True">
                                                <Setter Property="IsEnabled" Value="False" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </CheckBox.Style>

                            </CheckBox>

                            <ToggleButton
                                Grid.Column="1"
                                Width="60"
                                Margin="6,0,3,0"
                                IsChecked="{Binding Started}"
                                IsEnabled="{Binding CanStart}"
                                Template="{StaticResource radiusButtonTemplate}">

                                <ToggleButton.Style>
                                    <Style TargetType="ToggleButton">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Completed}" Value="True">
                                                <Setter Property="Margin" Value="10" />
                                                <Setter Property="BorderBrush" Value="WhiteSmoke" />
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding CanStart}" Value="False">
                                                <Setter Property="Margin" Value="10" />
                                                <Setter Property="BorderBrush" Value="WhiteSmoke" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ToggleButton.Style>

                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Checked">
                                        <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.DatabaseHelper.UpdateCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}}" />

                                    </i:EventTrigger>

                                    <i:EventTrigger EventName="Unchecked">
                                        <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.DatabaseHelper.UpdateCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}}" />
                                    </i:EventTrigger>

                                </i:Interaction.Triggers>

                                <ContentControl>
                                    <TextBlock Padding="4,0" Text="{Binding WorkingStatus}" />

                                </ContentControl>
                            </ToggleButton>

                            <StackPanel Grid.Column="4" Orientation="Horizontal">
                                <TextBlock Margin="5,0" Text="{Binding CreationDateShortString}" />

                                <TextBlock Text="-" />

                                <TextBlock Margin="5,0" Text="{Binding CompletionDateShortString}" />

                            </StackPanel>
                            <StackPanel
                                Grid.Column="3"
                                Margin="5,0"
                                Orientation="Horizontal">

                                <TextBlock Text="[" />

                                <TextBox
                                    Width="25"
                                    Margin="2,0,1,0"
                                    IsReadOnly="True"
                                    Text="{Binding Duration, UpdateSourceTrigger=PropertyChanged}"
                                    TextAlignment="Center">

                                    <i:Interaction.Behaviors>
                                        <m:TextBoxROChangeBehavior />
                                    </i:Interaction.Behaviors>

                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="LostKeyboardFocus">
                                            <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=ListView}, Path=DataContext.DatabaseHelper.UpdateCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>

                                </TextBox>

                                <TextBlock Margin="0,0,3,0" Text="min" />

                                <TextBlock Text="]" />

                            </StackPanel>

                            <StackPanel Grid.Column="2" Orientation="Horizontal">

                                <TextBox
                                    x:Name="titleTextBox"
                                    Margin="3,0"
                                    Background="WhiteSmoke"
                                    BorderBrush="Black"
                                    IsReadOnly="True"
                                    Text="{Binding Title, UpdateSourceTrigger=PropertyChanged}">

                                    <i:Interaction.Behaviors>
                                        <m:TextBoxROChangeBehavior />
                                    </i:Interaction.Behaviors>

                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="LostKeyboardFocus">
                                            <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=ListView}, Path=DataContext.DatabaseHelper.UpdateCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </TextBox>

                                <!--  ただの区切り線  -->
                                <Border
                                    Width="1"
                                    Background="Silver"
                                    Visibility="{Binding DataContext.SideTextContentVisiblity, ElementName=todoListView}" />


                                <TextBox
                                    Grid.Column="3"
                                    MinWidth="30"
                                    Margin="3,0"
                                    Background="WhiteSmoke"
                                    IsReadOnly="True"
                                    Text="{Binding TextContent, UpdateSourceTrigger=PropertyChanged}"
                                    TextWrapping="NoWrap"
                                    Visibility="{Binding DataContext.SideTextContentVisiblity, ElementName=todoListView}">


                                    <i:Interaction.Behaviors>
                                        <m:TextBoxROChangeBehavior />
                                    </i:Interaction.Behaviors>

                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="LostKeyboardFocus">
                                            <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=ListView}, Path=DataContext.DatabaseHelper.UpdateCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>

                                </TextBox>

                            </StackPanel>

                            <Border
                                x:Name="TextContentBoarder"
                                Grid.Row="1"
                                Grid.Column="2"
                                MinWidth="30"
                                Margin="2,1"
                                HorizontalAlignment="Left"
                                Background="WhiteSmoke"
                                CornerRadius="3">

                                <TextBox
                                    Grid.Row="1"
                                    Grid.Column="2"
                                    MinWidth="{Binding ElementName=TextContentBoarder, Path=MinWidth}"
                                    Margin="4,0"
                                    HorizontalAlignment="Left"
                                    AcceptsReturn="True"
                                    Background="WhiteSmoke"
                                    IsReadOnly="True"
                                    Text="{Binding TextContent, UpdateSourceTrigger=PropertyChanged}"
                                    TextWrapping="Wrap"
                                    Visibility="{Binding Path=DataContext.TextContentVisiblity, RelativeSource={RelativeSource AncestorType=Window}}">

                                    <i:Interaction.Behaviors>
                                        <m:TextBoxROChangeBehavior />
                                    </i:Interaction.Behaviors>

                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="LostKeyboardFocus">
                                            <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=ListView}, Path=DataContext.DatabaseHelper.UpdateCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>

                                </TextBox>
                            </Border>
                        </Grid>

                    </DockPanel>

                </DataTemplate>
            </ListView.ItemTemplate>

        </ListView>

        <TabControl Grid.Row="4">
            <TabControl.Resources>
                <Style
                    x:Key="tabItemTextBoxStyle"
                    BasedOn="{StaticResource {x:Type TextBox}}"
                    TargetType="TextBox">
                    <Setter Property="BorderBrush" Value="DarkGray" />
                    <Setter Property="BorderThickness" Value="0.5" />
                </Style>
            </TabControl.Resources>

            <TabItem Header="Todo">


                <DockPanel>

                    <Grid Margin="0,3" DockPanel.Dock="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition Width="7*" />
                        </Grid.ColumnDefinitions>

                        <TextBlock
                            Grid.Column="0"
                            HorizontalAlignment="Right"
                            Text="Priority : " />

                        <TextBox
                            x:Name="PriorityInputTextBox"
                            Grid.Column="1"
                            Style="{StaticResource tabItemTextBoxStyle}"
                            Text="{Binding EnteringTodo.Priority}" />

                        <TextBlock
                            Grid.Column="2"
                            HorizontalAlignment="Right"
                            Text="Duration : " />

                        <TextBox
                            Grid.Column="3"
                            Style="{StaticResource tabItemTextBoxStyle}"
                            Text="{Binding EnteringTodo.Duration}" />

                        <TextBlock
                            Grid.Column="4"
                            HorizontalAlignment="Right"
                            Text="Title : " />

                        <TextBox
                            Grid.Column="5"
                            HorizontalAlignment="Stretch"
                            Style="{StaticResource tabItemTextBoxStyle}"
                            Text="{Binding EnteringTodo.Title, UpdateSourceTrigger=PropertyChanged}" />

                    </Grid>

                    <TextBox
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        AcceptsReturn="True"
                        DockPanel.Dock="Bottom"
                        Style="{StaticResource tabItemTextBoxStyle}"
                        Text="{Binding EnteringTodo.TextContent, UpdateSourceTrigger=PropertyChanged}" />

                </DockPanel>

            </TabItem>

        </TabControl>

        <StatusBar Grid.Row="6">

            <StatusBarItem Grid.Column="0">
                <TextBlock Text="{Binding DatabaseHelper.Message}" />

            </StatusBarItem>

            <StatusBarItem HorizontalAlignment="Right">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Total " />
                    <TextBlock Text="{Binding DatabaseHelper.TodoCount}" />
                    <TextBlock Text=" todo." />

                </StackPanel>
            </StatusBarItem>

        </StatusBar>

    </Grid>
</Window>
